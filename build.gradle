plugins {
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'

    /* Project specific plugins */
    id 'checkstyle'
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id 'distribution'
    id 'jacoco'
    id 'org.openjfx.javafxplugin' version '0.0.8'
    id 'org.sonarqube' version '2.8'

}

group = 'com.valentingc.javafxclient'
version = '0.0.1'


repositories {
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'

    /* Project specific dependencies */
    compile 'com.jfoenix:jfoenix:9.0.9'
    compile 'org.apache.logging.log4j:log4j-api:2.13.3'
    compile 'org.apache.logging.log4j:log4j-core:2.13.3'
    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.13.3'

    implementation('org.controlsfx:controlsfx:11.0.1') {
        exclude group: 'org.controlsfx'
    }

    testCompile 'org.testfx:testfx-core:4.0.16-alpha'
    testCompile 'org.testfx:testfx-junit5:4.0.16-alpha'

    /* Team C specific dependencies */
    compile 'de.jensd:fontawesomefx:8.2'
}

application {
    mainClassName = 'com.valentingc.javafxclient.Main'
    applicationDefaultJvmArgs = [
            '--add-opens=javafx.base/com.sun.javafx.binding=ALL-UNNAMED',
            '--add-opens=javafx.base/com.sun.javafx.event=ALL-UNNAMED',
            '--add-opens=javafx.controls/com.sun.javafx.scene.control=ALL-UNNAMED',
            '--add-opens=javafx.controls/com.sun.javafx.scene.control.behavior=ALL-UNNAMED',
            '--add-opens=javafx.graphics/com.sun.javafx.css=ALL-UNNAMED',
            '--add-opens=javafx.graphics/com.sun.javafx.scene=ALL-UNNAMED',
            '--add-opens=javafx.graphics/com.sun.javafx.stage=ALL-UNNAMED'
    ]
}

/* Checkstyle configuration */
checkstyle {
    toolVersion = '8.32'
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
}

test {
    useJUnitPlatform()
}

/* JavaFX configuration */
javafx {
    version = '14'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics', 'javafx.media']
}

shadowJar {
    archiveFileName = 'JavaFxClient.jar'
    mergeServiceFiles()
    manifest {
        attributes(
                'Main-Class': "com.valentingc.javafxclient.Main"
        )
    }
}

distributions {
    main {
        distributionBaseName = 'main'
        contents {
            from shadowJar
        }
    }
}

build.dependsOn jacocoTestReport